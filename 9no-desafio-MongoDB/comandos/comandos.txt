"COLECCION MENSAJES"
    db.mensajes.find()
        [
        {
            _id: ObjectId("630421e8ab6b361344bd394d"),
            email: 'da@gmail.com',
            hora: 10,
            texto: 'Hola!'
        },
        {
            _id: ObjectId("630421e8ab6b361344bd394e"),
            email: 'de@gmail.com',
            hora: 11,
            texto: 'Hola, como estas'
        },
        {
            _id: ObjectId("6304223fab6b361344bd394f"),
            email: 'di@gmail.com',
            hora: 12,
            texto: 'Todo bien y vos?'
        },
        {
            _id: ObjectId("6304223fab6b361344bd3950"),
            email: 'do@gmail.com',
            hora: 13,
            texto: 'Tambien todo en orden'
        },
        {
            _id: ObjectId("63042307ab6b361344bd3951"),
            email: 'du@gmail.com',
            hora: 14,
            texto: 'Me alegro, y como esta tu familia'
        },
        {
            _id: ObjectId("63042307ab6b361344bd3952"),
            email: 'ea@gmail.com',
            hora: 15,
            texto: 'Mi hijo se esta recuperando'
        },
        {
            _id: ObjectId("6304235fab6b361344bd3953"),
            email: 'ee@gmail.com',
            hora: 16,
            texto: 'que le paso'
        },
        {
            _id: ObjectId("6304235fab6b361344bd3954"),
            email: 'ei@gmail.com',
            hora: 17,
            texto: 'Tuvo un accidente'
        },
        {
            _id: ObjectId("630423c0ab6b361344bd3955"),
            email: 'eo@gmail.com',
            hora: 18,
            texto: 'en el coche?'
        },
        {
            _id: ObjectId("630423c0ab6b361344bd3956"),
            email: 'eu@gmail.com',
            hora: 19,
            texto: 'Si, la semana pasada'
        }
        ]

"COLECCION PRODUCTOS"
    db.productos.find()
        [
        {
            _id: ObjectId("63042037ab6b361344bd3943"),
            titulo: 'Brocoli',
            precio: 100,
            imagen: '##'
        },
        {
            _id: ObjectId("63042037ab6b361344bd3944"),
            titulo: 'Cebolla',
            precio: 200,
            imagen: '##'
        },
        {
            _id: ObjectId("6304208bab6b361344bd3945"),
            titulo: 'Zanahoria',
            precio: 300,
            imagen: '##'
        },
        {
            _id: ObjectId("6304208bab6b361344bd3946"),
            titulo: 'Choclo',
            precio: 400,
            imagen: '##'
        },
        {
            _id: ObjectId("630420ccab6b361344bd3947"),
            titulo: 'Manzana',
            precio: 500,
            imagen: '##'
        },
        {
            _id: ObjectId("630420ccab6b361344bd3948"),
            titulo: 'Morron',
            precio: 600,
            imagen: '##'
        },
        {
            _id: ObjectId("6304210aab6b361344bd3949"),
            titulo: 'Remolacha',
            precio: 700,
            imagen: '##'
        },
        {
            _id: ObjectId("6304210aab6b361344bd394a"),
            titulo: 'Tomate',
            precio: 800,
            imagen: '##'
        },
        {
            _id: ObjectId("6304216eab6b361344bd394b"),
            titulo: 'Calabaza',
            precio: 900,
            imagen: '##'
        },
        {
            _id: ObjectId("6304216eab6b361344bd394c"),
            titulo: 'Lechuga',
            precio: 1000,
            imagen: '##'
        }
        ]


"Agregar un producto más en la colección de productos"

db.productos.insertOne({"titulo":"Naranja","precio":1500,"imagen":"##"})
{
  acknowledged: true,
  insertedId: ObjectId("630684dd9e00bfe1bd1a1f39")
}

"Realizar una consulta por nombre de producto específico:"

        "Listar los productos con precio menor a 1000 pesos."
           db.productos.find({"precio":{$lt:1000}})
            [
              {
                _id: ObjectId("63042037ab6b361344bd3943"),
                titulo: 'Brocoli',
                precio: 100,
                imagen: '##'
              },
              {
                _id: ObjectId("63042037ab6b361344bd3944"),
                titulo: 'Cebolla',
                precio: 200,
                imagen: '##'
              },
              {
                _id: ObjectId("6304208bab6b361344bd3945"),
                titulo: 'Zanahoria',
                precio: 300,
                imagen: '##'
              },
              {
                _id: ObjectId("6304208bab6b361344bd3946"),
                titulo: 'Choclo',
                precio: 400,
                imagen: '##'
              },
              {
                _id: ObjectId("630420ccab6b361344bd3947"),
                titulo: 'Manzana',
                precio: 500,
                imagen: '##'
              },
              {
                _id: ObjectId("630420ccab6b361344bd3948"),
                titulo: 'Morron',
                precio: 600,
                imagen: '##'
              },
              {
                _id: ObjectId("6304210aab6b361344bd3949"),
                titulo: 'Remolacha',
                precio: 700,
                imagen: '##'
              },
              {
                _id: ObjectId("6304210aab6b361344bd394a"),
                titulo: 'Tomate',
                precio: 800,
                imagen: '##'
              },
              {
                _id: ObjectId("6304216eab6b361344bd394b"),
                titulo: 'Calabaza',
                precio: 900,
                imagen: '##'
              }
            ]

        "Listar los productos con precio entre los 1000 a 3000 pesos."
        db.productos.find({ "precio" : { $gte:1000, $lte:3000 } })
            [
              {
                _id: ObjectId("6304216eab6b361344bd394c"),
                titulo: 'Lechuga',
                precio: 1000,
                imagen: '##'
              },
              {
                _id: ObjectId("630684dd9e00bfe1bd1a1f39"),
                titulo: 'Naranja',
                precio: 1500,
                imagen: '##'
              }
            ]

        "Listar los productos con precio mayor a 3000 pesos."
        db.productos.find({"precio":{$gt:3000}})
                \\VACIO YA QUE NINGUN PRODUCTO CUESTA MAS DE 3000\\
        
        "Realizar una consulta que traiga sólo el nombre del tercer producto más barato."
        db.productos.find( {} , { "titulo":1 } ).sort( { "precio": 1 } ).skip( 2 ).limit( 1 )
            [ { _id: ObjectId("6304208bab6b361344bd3945"), titulo: 'Zanahoria' } ]

"Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100."
        *  db.productos.updateMany( {} , { $set: { "stock":100 } } )
            {
              acknowledged: true,
              insertedId: null,
              matchedCount: 11,
              modifiedCount: 11,
              upsertedCount: 0
            }
        *  db.productos.find()
            [
            {
                _id: ObjectId("63042037ab6b361344bd3943"),
                titulo: 'Brocoli',
                precio: 100,
                imagen: '##',
                stock: 100
            },
            {
                _id: ObjectId("63042037ab6b361344bd3944"),
                titulo: 'Cebolla',
                precio: 200,
                imagen: '##',
                stock: 100
            },
            {
                _id: ObjectId("6304208bab6b361344bd3945"),
                titulo: 'Zanahoria',
                precio: 300,
                imagen: '##',
                stock: 100
            },
            {
                _id: ObjectId("6304208bab6b361344bd3946"),
                titulo: 'Choclo',
                precio: 400,
                imagen: '##',
                stock: 100
            },
            {
                _id: ObjectId("630420ccab6b361344bd3947"),
                titulo: 'Manzana',
                precio: 500,
                imagen: '##',
                stock: 100
            },
            {
                _id: ObjectId("630420ccab6b361344bd3948"),
                titulo: 'Morron',
                precio: 600,
                imagen: '##',
                stock: 100
            },
            {
                _id: ObjectId("6304210aab6b361344bd3949"),
                titulo: 'Remolacha',
                precio: 700,
                imagen: '##',
                stock: 100
            },
            {
                _id: ObjectId("6304210aab6b361344bd394a"),
                titulo: 'Tomate',
                precio: 800,
                imagen: '##',
                stock: 100
            },
            {
                _id: ObjectId("6304216eab6b361344bd394b"),
                titulo: 'Calabaza',
                precio: 900,
                imagen: '##',
                stock: 100
            },
            {
                _id: ObjectId("6304216eab6b361344bd394c"),
                titulo: 'Lechuga',
                precio: 1000,
                imagen: '##',
                stock: 100
            },
            {
                _id: ObjectId("6306a851d6ed82a0721fb7c4"),
                titulo: 'Naranja',
                precio: 1500,
                imagen: '##',
                stock: 100
            }
            ]

"Cambiar el stock a cero de los productos con precios mayores a 4000 pesos."
/*LO HAGO CON LOS PRECIOS MAYORES A 700 PESOS YA QUE NO TENGO UNO QUE CUESTE 4000 PESOS*/
        db.productos.updateMany( { "precio" : { $gt: 700 } } , { $set: { "stock":0 } } )
                {
                    acknowledged: true,
                    insertedId: null,
                    matchedCount: 4,
                    modifiedCount: 4,
                    upsertedCount: 0
                }

                * db.productos.find()
                    [
                    {
                        _id: ObjectId("63042037ab6b361344bd3943"),
                        titulo: 'Brocoli',
                        precio: 100,
                        imagen: '##',
                        stock: 100
                    },
                    {
                        _id: ObjectId("63042037ab6b361344bd3944"),
                        titulo: 'Cebolla',
                        precio: 200,
                        imagen: '##',
                        stock: 100
                    },
                    {
                        _id: ObjectId("6304208bab6b361344bd3945"),
                        titulo: 'Zanahoria',
                        precio: 300,
                        imagen: '##',
                        stock: 100
                    },
                    {
                        _id: ObjectId("6304208bab6b361344bd3946"),
                        titulo: 'Choclo',
                        precio: 400,
                        imagen: '##',
                        stock: 100
                    },
                    {
                        _id: ObjectId("630420ccab6b361344bd3947"),
                        titulo: 'Manzana',
                        precio: 500,
                        imagen: '##',
                        stock: 100
                    },
                    {
                        _id: ObjectId("630420ccab6b361344bd3948"),
                        titulo: 'Morron',
                        precio: 600,
                        imagen: '##',
                        stock: 100
                    },
                    {
                        _id: ObjectId("6304210aab6b361344bd3949"),
                        titulo: 'Remolacha',
                        precio: 700,
                        imagen: '##',
                        stock: 100
                    },
                    {
                        _id: ObjectId("6304210aab6b361344bd394a"),
                        titulo: 'Tomate',
                        precio: 800,
                        imagen: '##',
                        stock: 0
                    },
                    {
                        _id: ObjectId("6304216eab6b361344bd394b"),
                        titulo: 'Calabaza',
                        precio: 900,
                        imagen: '##',
                        stock: 0
                    },
                    {
                        _id: ObjectId("6304216eab6b361344bd394c"),
                        titulo: 'Lechuga',
                        precio: 1000,
                        imagen: '##',
                        stock: 0
                    },
                    {
                        _id: ObjectId("6306a851d6ed82a0721fb7c4"),
                        titulo: 'Naranja',
                        precio: 1500,
                        imagen: '##',
                        stock: 0
                    }
                    ]

"Borrar los productos con precio menor a 1000 pesos"
        db.productos.deleteMany( { "precio" : { $lt: 1000 } } )
                { acknowledged: true, deletedCount: 9 }

        *db.productos.find()
                [
                {
                    _id: ObjectId("6304216eab6b361344bd394c"),
                    titulo: 'Lechuga',
                    precio: 1000,
                    imagen: '##',
                    stock: 0
                },
                {
                    _id: ObjectId("6306a851d6ed82a0721fb7c4"),
                    titulo: 'Naranja',
                    precio: 1500,
                    imagen: '##',
                    stock: 0
                }
                ]

"Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.
"

* db.createUser( { user: "pepe", pwd: "asd456", roles: [ { role: "read", db: "ecommerce" } ] } )
        { ok: 1 }
* mongosh -u pepe -p asd456 --authenticationDatabase ecommerce
        Current Mongosh Log ID: 6306b48145ff974fc32e6090
        Connecting to:          mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&authSource=ecommerce&appName=mongosh+1.5.4
        Using MongoDB:          6.0.0
        Using Mongosh:          1.5.4
* db.productos.find()
        [
        {
            _id: ObjectId("6304216eab6b361344bd394c"),
            titulo: 'Lechuga',
            precio: 1000,
            imagen: '##',
            stock: 0
        },
        {
            _id: ObjectId("6306a851d6ed82a0721fb7c4"),
            titulo: 'Naranja',
            precio: 1500,
            imagen: '##',
            stock: 0
        }
        ]
* db.productos.insertOne({"titulo":"Palta"})
        MongoServerError: not authorized on ecommerce to execute command { insert: "productos", documents: [ { titulo: "Palta", _id: ObjectId('6306b4f614d91ef2788cc73a') } ], ordered: true, lsid: { id: UUID("47b4ee02-c6ae-4a81-97c4-4eb54ba5000a") }, $db: "ecommerce" }










